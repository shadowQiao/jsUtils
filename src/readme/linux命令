1.rm删除命令
    rm -rf 目录名 删除一个目录
        -r 递归删除，如果下面有子目录，也一并删除
        -f 不提示任何信息
    rm -f 文件名 删除一个文件
2.touch命令，创建一个文件
    touch 文件名 创建一个文件
3.vim命令，详情见vim用法
    vi 文件名
        -R 以只读方式打开一个文件
4.grep命令，文本搜索工具
    grep 搜索字符串或者正则表达式 文件1 文件2 文件3
    --color=auto 给命中的字符加上颜色
    -E 使用正则表达式 <=> egrep 正则表达式
    -v 输出除了匹配项的所有行
    -o 只输出文件中匹配到的部分
    -c 统计包含匹配信息的行数
    -n 输出包含匹配字符串的行数 -n 选项
    -b 输出文件中匹配到的部分并显示和文件第一个字符的偏移量
    -l 搜索多个文件，看哪些文件中有匹配
    -r 在多级目录中进行递归搜索，文件名换成目录就行了
    -i 忽略大小写
    -A [N] 显示匹配之前的几行
    -B [N] 显示匹配之后的几行
    -C [N] 显示匹配之前之后的几行
    --include
    --exclude
        后面可以跟 *.{php,html}和文件名目录名
        去除和包含某些文件
5.echo "aaa" > file1
  echo "bbb" > file2
  echo "aaa" > file3
  grep "aaa" file* -lZ | xargs -0 rm
  执行后会删除file1和file3，grep输出用-Z选项来指定以0值字节作为终结符文件名（\0），
  xargs -0 读取输入并用0值字节终结符分隔文件名，然后删除匹配文件，-Z通常和-l结合使用。
6.wc命令，计算文件的Byte数、字数或是行数
    -c字节数
    -l行数
    -w字数
7.输入输出重定向，单个的覆盖，多个的追加
    > >> < <<
    标准输入	standard input	0	0<,0<<
    标准输出	standard output	1	1>,1>>
    标准错误输出	standard error output	2	2>,2>>
    追加，覆盖
    <和<<是从文件中取出数据到指定的文件中
    ls test test2 2>/dev/null
    /dev/null是关闭这个命令的错误输出
7.>>
    追加，不覆盖









