this是运行时绑定，在函数调用时发生的绑定
执行上下文会记录
1.函数在哪儿调用
2.函数调用方法
3.参数
4.this属性
四种绑定this的方式
1.new绑定
2.显式绑定
    硬绑定：通过工具函数将函数绑定到某个对象上，
    function bindThis(func, obj) {
        return function() {
            func.bind(obj, arguments);
        };
    }
    function test() {
        console.log(this.a);
    }
    var obj = {
        a: 'This is a test'
    };
    var newFunc = bindThis(func, obj);
3.隐式绑定
4.默认绑定
    四种绑定this的优先级
    1).默认绑定最低
    2).显式绑定高于隐式绑定
    3).new绑定高于隐式绑定
    4).new绑定高于显式绑定
    软绑定
    if (!Function.prototype.softBind) { Function.prototype.softBind = function(obj) {
    var fn = this;
    // 捕获所有 curried 参数
    var curried = [].slice.call( arguments, 1 ); var bound = function() {
    return fn.apply(
    (!this || this === (window || global)) ?
    obj : this
    curried.concat.apply( curried, arguments )
    ); };
                 bound.prototype = Object.create( fn.prototype );
    return bound; };
    }
    5).箭头函数this的绑定基于词法作用域，无法被修改，new也不可以
