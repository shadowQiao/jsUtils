1.直接量字符
    1).字母和数字
    2).\o --- NUL字符
    3).\t --- 制表符
    4).\n --- 换行符
    5).\v --- 垂直制表符
    6).\f --- 换页符
    7).\r --- 回车符
2.字符类
    1).[...]
    2).[^...]
    3)..除换行符和Unicode行终止符
    4).\w等价于[a-zA-Z0-9]
    5).\W等价于[^a-zA-Z0-9]
    6).\s任何Unicode空白符
    7).\S任何非Unicode空白符
    8).\d等价于[0-9]
    9).\D等价于[^0-9]
    10).[\b]退格直接量
3.重复
    1).{n,m}至少n次，至多m次
    2).{n,}至少n次
    3).{n}n次
    4).? 0-1次
    5).+ 1次或者更多次，等于{1,}
    6).* 0次或者更多次，等于{0,}
4.默认的匹配方式都是贪婪匹配，如果要改成非贪婪匹配
    在上面的重复方式后面加?
注意
    /a+?b/匹配aaaab，还是匹配'aaaab'
5.选择、分组和引用
    |
    (...)
    (?:...)只用于分组，不生成引用
    /(abc)(?:abc)(efg)abc/ \2指efg
    \n 不能放在字符类里面
6.指定匹配位置
    ^
    $
    \b单次边界，\w和\W之间的位置
    \B
    (?=p)零宽正向现行断言 一定要匹配
    (?!p)零宽负向先行断言 一定不匹配
7.修饰符
    i不区分大小写
    m多行模式
    g全局匹配，要找出被检索字符串的所有匹配
8.字符串正则匹配方法，不会改变正则表达式中的lastIndex属性
    1).search不支持全局匹配，匹配后返回index，反之返回-1
    2).replace如果是全局匹配，替换所有匹配的内容，否则替换第一个
    3).split
    4).match
9.RegExp对象的属性和正则匹配方法
    1).source
    2).global
    3).multiline
    4).ignoreCase
    5).lastIndex
    6).exec
    无论是全局的还是非全局的，都返回当前匹配的信息，区别在于非全局的lastIndex始终为0
    全局的lastIndex为上一次匹配的下一个index，如果没有匹配返回null，并将lastIndex置为0
    7).test
    跟exec修改lastIndex相似，只是匹配的时候返回true，没匹配返回null